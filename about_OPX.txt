DESCRIPTION
    The module OPX provides commands to administer and configure Exchange server.
    The module requires Exchange Server 2016 or Exchange server 2019. It could be
    possible to administer Exchange 2013 servers too. Administering Exchange 2013 
    server was not fully tested. Some of the module commands will fail, if the module
    is executed on an Exchange 2013 server.
    Most of the commands of the module don't require the EMS, but if EMS is not available, the following 
    commands will not be exported:
    - Start-OPXExchangeServerMaintenance
    - Remove-OPXExchangeServerFromMaintenance
    - Start-OPXMailboxDatabaseRedistribution
    The reason is, the commands require scripts from the $Exscripts directory.
    PowerShell core is NOT supported!
    To load the module, a membership in the group 'Organization Management' is required.
    Domain admins, or higher, can load the module but without a 'Organization Management'
    group membership, some commands will fail.
    This is true, if the module is loaded outside the EMS. It was not tested to load
    the module in EMS with lower privileges. In addition, the module was tested with
    domain admin rights.
    Depending on the environment, a different set of commands will be exported:
    No Exchange detected:
    - Get-OPXExchangeSchemaVersion,
    - Save-OPXExchangeServiceStartupTypeToFile,
    - Restore-OPXExchangeServiceStartupType,
    - Get-OPXLastComputerBootTime,
    - Send-OPXTestMailMessages (for experimential use in a lab)
    Exchange is detected but not EMS:
    - full set of commands without the commands mentioned above
    Exchange is detected and EMS is installed on OPXLastComputerBootTime
    - full set of commands

    With the PowerShell command Get-Help, the help content for the command can be
    displayed.

    The module was developed and tested in a DAG environment only!

ARGUMENTCOMPLETER
    For some command parameters values via ArgumentCompleter can be provided. Names of:
    - Exchange servers
    - DAGs
    are fetched from AD and provided via ArgumentCompleter. In some cases/commands, ArgumentCompleter 
    is used for file paths, names of services and parmeters for the virtual directory 
    configuration template too.
    For the server and DAG names the ArgumentCompleter uses methodes, exported via the variable
    - $__OPX_ModuleData
    The methodes
    - getDagList
    - getExchangeServerList
    query the AD for the names of Exchange servers and DAG info (name and member server).

CODE SIGNING
    If code signing is a requirement, in the subfolder
    - codeSigning
    a script for code signing is available. To use the script dot-source it and
    run the command
    - Set-AuthenticodeSignatureForPSModuleFiles
    The command can sign a single file (parameter File) or all *.ps* files under a particular 
    PowerShell module root folder (parameter ModuleName).

DESCLAIMER
    Before you run the module in a production environment, test the module in a lab
    environment. As described in the License.txt, the module is PROVIDED 'AS IS'
    without any warranty!
    Please note that the command 
    - Send-OPXTestMailMessages
    was written to be used exclusively in a lab environment to simulate load!

File PERMISSIONS (WRITE)
    Users, running the module need WRITE permissions for:
    - Log directory
    - Virtual directory template file

COMMANDS
    As mentioned above, depending of the environment, a different set of commands
    will be exported. Subsequent, the list of the commands:

    Configuring virtual directories:
    Clear-OPXVirtualDirectoryConfigurationTemplate
    Get-OPXVirtualDirectoryConfigurationTemplate
    Remove-OPXVirtualDirectoryConfigurationFromTemplate
    Set-OPXVirtualDirectoryConfigurationTemplate
    Get-OPXVirtualDirectories
    Resolve-OPXVirtualDirectoriesURLs
    Set-OPXVirtualDirectories
    For configuring virtual directories, the commands provide the possibility to configure
    - external URL/host name
    - internal URL/host name
    - AutoDiscoverServiceInternalUri
    To configure additional attributes a configuration templated can be created and used with 
    the command
    - Set-OPXVirtualDirectories
    The manage the configuration template, the commands 
    - *-OPXVirtualDirectoryConfigurationTemplate
    - Remove-OPXVirtualDirectoryConfigurationFromTemplate
    can be used. The configuration template has a section for every service like
    - OWA
    - ECP
    - OAB
    - WebServices
    - ActiveSync
    - Mapi
    - OutlookAnywhere
    - Autodiscover
    For example, for the service OWA the following options could be configured
    - DefaultDomain
    - LogonFormat
    If a value for DefaultDomain is provided and the LogonFormat is set to UserName, only the
    the user name, for the domain configured in DefaultDomain, is requiered.
    To use the templates, the commands *-OPXVirtualDirectories have the parameter
    - IncludeConfigurationFromConfigFile
    The Set-OPXVirtualDirectories command configures the provided attributes and the 
    Get-OPXVirtualDirectories command displays the attributes, configured in the template.

    Manage Exchange certificates:
    New-OPXExchangeCertificateRequest
    Copy-OPXExchangeCertificateToServers
    Get-OPXExchangeCertificate
    Remove-OPXExchangeCertificate
    New-OPXExchangeAuthCertificate
    Test-OPXExchangeAuthCertificateRollout

    Manage Exchange services:
    Restart-OPXExchangeService
    Restore-OPXExchangeServiceStartupType
    Save-OPXExchangeServiceStartupTypeToFile

    Perform Exchange server maintenance:
    Get-OPXExchangeServerInMaintenance
    Start-OPXExchangeServerMaintenance
    Remove-OPXExchangeServerFromMaintenance
    Test-OPXExchangeServerMaintenanceState

    Manage malbox databases in a DAG environment:
    Test-OPXMailboxDatabaseMountStatus
    Start-OPXMailboxDatabaseRedistribution
    Get-OPXPreferredServerForMailboxDatabase

    For lab testing only:
    Send-OPXTestMailMessages

    Miscellaneous commands:
    Add-OPXKeyToConfigFile
    Get-OPXExchangeSchemaVersion
    Get-OPXExchangeServer
    Get-OPXLastComputerBootTime
    Get-OPXLogFileEntries